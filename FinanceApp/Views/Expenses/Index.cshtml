@model IEnumerable<FinanceApp.Models.Expense>
@{
	ViewData["Title"] = "Expenses";
}

<div class="container">
	<h2>My Expenses</h2>

	<a asp-controller="Expenses" asp-action="Create" class="btn btn-outline-success btn-sm mt-3">Create New Expense</a>

	<table class="table table-bordered mt-3">
		<thead class="table-light">
			<tr>
				<th>Description</th>
				<th>Amount</th>
				<th>Category</th>
				<th>Date</th>
				<th>Action</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>@item.Description</td>
					<td>@item.Amount.ToString("C", new System.Globalization.CultureInfo("id-ID"))</td>
					<td>@item.Category</td>
					<td>@item.Date.ToString("yyyy-MM-dd")</td>
					<td>
						<a asp-controller="Expenses"
							asp-action="Edit"
							asp-route-id="@item.Id"
							class="btn btn-outline-warning btn-sm">
							Edit
						</a>
						<a asp-controller="Expenses"
							asp-action="Delete"
							asp-route-id="@item.Id"
							class="btn btn-outline-danger btn-sm">
							Delete
						</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>

<div class="container">
	<h2>Expenses Overview</h2>
</div>

<div class="container">
	<canvas style="max-width: 450px; max-height: 450px;"id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
	const ctx = document.getElementById('myChart');

	fetch('/Expenses/GetChart')
		.then(response=> response.json())
		.then(data => {
			new Chart(ctx, {
				type: 'pie',
				data: {
					labels: data.map(d => d.category),
					datasets: [{
						data: data.map(d => d.total),
					}]
				},
			});
		})
</script>
